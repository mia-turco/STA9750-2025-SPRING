---
title: "EIA Electricity Report"
format: 
  html:
    theme: journal  
    toc: true       
    toc-depth: 2    
execute:
  echo: false       
editor:
  markdown:
    wrap: 72
---
# The EIA Electricity Report (unfinished!!)

## Task 1: Data Importation

The following report is a table that contains information about the electricity industry in different U.S. states.

- **Pounds of CO2 emitted per MWh of electricity produced**
- **The dominant type of electricity generation source in each state.**
- **The average retail price of electricity for 1000 kWh in dollars.**
- **The total electricity generation capacity in megawatt-hours. **

This is to ensure that all the data has been imported correctly as represented by this table.


```{r, echo=FALSE, message=FALSE, warning=FALSE}
suppressPackageStartupMessages({
  ensure_package <- function(pkg){
    pkg <- as.character(substitute(pkg))
    options(repos = c(CRAN = "https://cloud.r-project.org"))
    if(!require(pkg, character.only=TRUE)) install.packages(pkg)
    stopifnot(require(pkg, character.only=TRUE))
  }
ensure_package(dplyr)
ensure_package(httr2)
ensure_package(rvest)
ensure_package(datasets)
ensure_package(purrr)
ensure_package(DT)
ensure_package(stringr) 

})

get_eia_sep <- function(state, abbr){
  state_formatted <- str_to_lower(state) |> str_replace_all("\\s", "")
  
  dir_name <- file.path("data", "mp02")
  file_name <- file.path(dir_name, state_formatted)
  
  dir.create(dir_name, showWarnings=FALSE, recursive=TRUE)
  
  if(!file.exists(file_name)){
    BASE_URL <- "https://www.eia.gov"
    REQUEST <- request(BASE_URL) |> 
      req_url_path("electricity", "state", state_formatted)
    
    RESPONSE <- req_perform(REQUEST)
    
    resp_check_status(RESPONSE)
    
    writeLines(resp_body_string(RESPONSE), file_name)
  }
  
  TABLE <- read_html(file_name) |> 
    html_element("table") |> 
    html_table() |>
    mutate(Item = str_to_lower(Item))
  
  if("U.S. rank" %in% colnames(TABLE)){
    TABLE <- TABLE |> rename(Rank = `U.S. rank`)
  }
  
  CO2_MWh <- TABLE |> 
    filter(Item == "carbon dioxide (lbs/mwh)") |>
    pull(Value) |> 
    str_replace_all(",", "") |>
    as.numeric()
  
  PRIMARY <- TABLE |> 
    filter(Item == "primary energy source") |> 
    pull(Rank)
  
  RATE <- TABLE |>
    filter(Item == "average retail price (cents/kwh)") |>
    pull(Value) |>
    as.numeric()
  
  GENERATION_MWh <- TABLE |>
    filter(Item == "net generation (megawatthours)") |>
    pull(Value) |>
    str_replace_all(",", "") |>
    as.numeric()
  
  data.frame(CO2_MWh               = CO2_MWh, 
             primary_source        = PRIMARY,
             electricity_price_MWh = RATE * 10, # / 100 cents to dollars &
             # * 1000 kWh to MWH 
             generation_MWh        = GENERATION_MWh, 
             state                 = state, 
             abbreviation          = abbr
  )
}

EIA_SEP_REPORT <- map2(state.name, state.abb, get_eia_sep) |> list_rbind()

ensure_package(scales)
ensure_package(DT)

EIA_SEP_REPORT |> 
  select(-abbreviation) |>
  arrange(desc(CO2_MWh)) |>
  mutate(CO2_MWh = number(CO2_MWh, big.mark=","), 
         electricity_price_MWh = dollar(electricity_price_MWh), 
         generation_MWh = number(generation_MWh, big.mark=",")) |>
  rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, 
         `Primary Source of Electricity Generation`=primary_source, 
         `Average Retail Price for 1000 kWh`=electricity_price_MWh, 
         `Total Generation Capacity (MWh)`= generation_MWh, 
         State=state) |>
  datatable()
```
As we can see, since our table has redered the appropriate information, we can conclude that the data has been properly imported and can now begin our analysis.

## Task 2: Initial Analysis of SEP Data

**Our first objective is to find which state has the most expensive retail electricity:**
  
```{r}
most_expensive_state <- EIA_SEP_REPORT |> 
  filter(electricity_price_MWh == max(electricity_price_MWh, na.rm = TRUE)) |> 
  select(state, electricity_price_MWh)

cat("State with the most expensive retail electricity:\n")
most_expensive_state
```


**Our next objective is to find the state with the "dirtiest" electricty mix, aka the state with the highest CO2 emissions:**


```{r}
dirtiest_state <- EIA_SEP_REPORT |> 
  filter(CO2_MWh == max(CO2_MWh, na.rm = TRUE)) |> 
  select(state, CO2_MWh)

cat("State with the 'dirtiest' electricity mix (highest CO2 emissions per MWh):\n")
dirtiest_state
```


**Now we will find on average, how many pounds of CO2 are emitted per MWh of electricity produced in the US:**


```{r}
average_CO2_weighted <- EIA_SEP_REPORT |> 
  mutate(weighted_CO2 = CO2_MWh * generation_MWh) |> 
  summarise(weighted_average_CO2 = sum(weighted_CO2, na.rm = TRUE) / sum(generation_MWh, na.rm = TRUE)) |> 
  pull(weighted_average_CO2)

cat("The average CO2 emitted per MWh of electricity produced in the US is:", round(average_CO2_weighted, 2), "pounds.")
```

**Next, we want to find what is the rarest primary energy source in the US and what is the associated cost of electricity and where is it used:**

```{r}
rarest_primary_source <- EIA_SEP_REPORT |> 
  count(primary_source) |> 
  filter(n == min(n)) |> 
  pull(primary_source)

rarest_electricity_price <- EIA_SEP_REPORT |> 
  filter(primary_source == rarest_primary_source) |> 
  select(state, electricity_price_MWh) 

states_using_rarest_energy_source <- EIA_SEP_REPORT |> 
  filter(primary_source == rarest_primary_source) |> 
  select(state)

cat("The rarest primary energy source in the U.S. is:", rarest_primary_source, "\n")
cat("The associated cost of electricity is:", rarest_electricity_price$electricity_price_MWh, "per MWh.\n")
cat("States using this energy source are:\n")
print(states_using_rarest_energy_source)
```

**Finally, we want to know how many times cleaner is NY’s energy mix than that of Texas:**
```{r}
texas_co2 <- EIA_SEP_REPORT |> 
  filter(state == "Texas") |> 
  pull(CO2_MWh)

new_york_co2 <- EIA_SEP_REPORT |> 
  filter(state == "New York") |> 
  pull(CO2_MWh)

cleaner_ratio <- texas_co2 / new_york_co2

cat("New York's energy mix is", round(cleaner_ratio, 2), "times cleaner than Texas's.")
```

## Energy Consumption by U.S. Transit Agencies

The following table shows the energy consumption of various transit agencies in the U.S. in 2023. It illustrates how many agencies which use different kinds of transport (such as buses, subways and ferries) used each kind of fuel. Here is a quick overview of what the table shows:

1. **NTD ID:** This is a unique identification of each transit agency or system.
2. **Mode:** The kind of transport employed (for instance, bus, subway, etc.).
3. **Agency Name:** The name of the transit agency.
4. **Fuel Types:** The columns for different fuel types show the amount of energy consumed by each agency in that fuel type. For instance, Bio-Diesel and Electric Battery indicate the energy derived from these sources in gallons for non-electric fuels and kWh for electric sources.

The data is cleaned and summarized to help us understand the energy impact of public transportation in the United States.

We’ve shown 10 random rows here to help you get a idea of how the energy consumption is split across different agencies and types of transport.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
ensure_package(readxl)
# Create 'data/mp02' directory if not already present
DATA_DIR <- file.path("data", "mp02")
dir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)

NTD_ENERGY_FILE <- file.path(DATA_DIR, "2023_ntd_energy.xlsx")

if(!file.exists(NTD_ENERGY_FILE)){
    DS <- download.file("https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx", 
                  destfile=NTD_ENERGY_FILE, 
                  method="curl")
    
    if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){
        cat("I was unable to download the NTD Energy File. Please try again.\n")
        stop("Download failed")
    }
}

NTD_ENERGY_RAW <- read_xlsx(NTD_ENERGY_FILE)

ensure_package(tidyr)
to_numeric_fill_0 <- function(x){
    x <- if_else(x == "-", NA, x)
    replace_na(as.numeric(x), 0)
}

NTD_ENERGY <- NTD_ENERGY_RAW |> 
    select(-c(`Reporter Type`, 
              `Reporting Module`, 
              `Other Fuel`, 
              `Other Fuel Description`)) |>
    mutate(across(-c(`Agency Name`, 
                     `Mode`,
                     `TOS`), 
                  to_numeric_fill_0)) |>
    group_by(`NTD ID`, `Mode`, `Agency Name`) |>
    summarize(across(where(is.numeric), sum), 
              .groups = "keep") |>
    mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |>
    filter(ENERGY > 0) |>
    select(-ENERGY) |>
    ungroup()

# Display 10 random rows
slice_sample(NTD_ENERGY , n=10)
```

## Task 3: Recording the Mode Column

To begin with, we use the `distinct()` function to identify the distinct mode codes in the dataset from the **Mode** column. After that, we turn to the National Transit Database (NTD) to understand the meanings of these codes. Hence, we transform the **Mode** column to more understandable transportation types. Here is the code for the modified version that also includes the recoding of the **Mode** column.


<details>
  <summary>Click to Show/Hide R Code</summary>

```{r,eval=FALSE}
NTD_ENERGY <- NTD_ENERGY |>
  mutate(Mode = case_when(
    Mode == "HR" ~ "Heavy Rail", 
    Mode == "LR" ~ "Light Rail", 
    Mode == "MB" ~ "Motor Bus",
    Mode == "VP" ~ "Van Pool", 
    Mode == "TB" ~ "Trolley Bus",
    Mode == "SR" ~ "Streetcar",
    Mode == "DR" ~ "Demand Response",
    Mode == "FB" ~ "Ferryboat",
    Mode == "OB" ~ "Automobile Bus",
    Mode == "CB" ~ "Commuter Bus",
    Mode == "AB" ~ "Arterial Bus",
    Mode == "BT" ~ "Bus Rapid Transit",
    TRUE ~ "Unknown"  
  ))
```
</details>